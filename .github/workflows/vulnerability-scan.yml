name: Vulnerability Scan

on:
  schedule:
    # Run weekly on Mondays at 6 AM UTC
    - cron: '0 6 * * 1'
  push:
    paths:
      - '**/Cargo.toml'
      - '**/Cargo.lock'
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run security audit
        uses: rustsec/audit-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        id: audit
        
      - name: Generate vulnerability report
        if: failure()
        run: |
          echo "## Security Vulnerability Report" > vulnerability-report.md
          echo "" >> vulnerability-report.md
          echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> vulnerability-report.md
          echo "**Workflow:** ${{ github.workflow }}" >> vulnerability-report.md
          echo "**Commit:** ${{ github.sha }}" >> vulnerability-report.md
          echo "" >> vulnerability-report.md
          echo "### Vulnerabilities Found" >> vulnerability-report.md
          echo "" >> vulnerability-report.md
          
          # Run cargo audit to get detailed output
          cargo install cargo-audit --locked
          cargo audit --format json > audit-output.json 2>/dev/null || true
          
          # Parse and format the output
          if [ -f audit-output.json ]; then
            echo "Details of the security audit:" >> vulnerability-report.md
            echo '```json' >> vulnerability-report.md
            cat audit-output.json >> vulnerability-report.md
            echo '```' >> vulnerability-report.md
          else
            echo "Failed to generate detailed audit report. Please check the security audit logs." >> vulnerability-report.md
          fi
          
          echo "" >> vulnerability-report.md
          echo "### Remediation Steps" >> vulnerability-report.md
          echo "" >> vulnerability-report.md
          echo "1. Review the vulnerabilities listed above" >> vulnerability-report.md
          echo "2. Update affected dependencies to secure versions" >> vulnerability-report.md
          echo "3. Test the application after updates" >> vulnerability-report.md
          echo "4. Consider using \`cargo audit --fix\` for automated fixes where available" >> vulnerability-report.md
          echo "" >> vulnerability-report.md
          echo "### Additional Resources" >> vulnerability-report.md
          echo "" >> vulnerability-report.md
          echo "- [RustSec Advisory Database](https://rustsec.org/advisories/)" >> vulnerability-report.md
          echo "- [Cargo Audit Documentation](https://docs.rs/cargo-audit/)" >> vulnerability-report.md
        
      - name: Create security issue
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "ğŸš¨ Security Vulnerabilities Detected - $(date -u '+%Y-%m-%d')"
          content-filepath: ./vulnerability-report.md
          labels: |
            security
            vulnerability
            automated
            priority-high
          assignees: dominicburkart